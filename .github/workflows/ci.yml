name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-app:
    name: Run Frontend and Backend with MongoDB
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: 🛎 Checkout Code
        uses: actions/checkout@v4

      - name: 🛠 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci
        working-directory: AutoDreamZA-react-app

      - name: 🔧 Build TypeScript Backend
        run: npx tsc --project tsconfig.server.json
        working-directory: AutoDreamZA-react-app

      - name: 🚀 Start Backend Server
        run: |
          npx ts-node -P tsconfig.server.json src/BACKEND/server.ts &
          echo "Started backend server in background"
        working-directory: AutoDreamZA-react-app
        env:
          MONGO_URI: mongodb://localhost:27017/autodreamdb

      - name: ⏳ Wait for Backend to be Ready
        run: |
          echo "Waiting for backend to start..."
          for i in {1..20}; do
            if curl --silent --fail http://localhost:5000/user/Login; then
              echo "✅ Backend is up!"
              exit 0
            fi
            echo "Retrying in 1s... ($i/100)"
            sleep 1
          done
          echo "❌ Backend failed to start in time"
          exit 1

      - name: 🔒 Check Security Middleware
        run: |
          FILE=AutoDreamZA-react-app/src/BACKEND/server.ts

          echo "🔍 Checking for Helmet (Clickjacking, HSTS)..."
          if grep -iq "helmet" "$FILE" && grep -iq "app.use(helmet" "$FILE"; then
            echo "✅ Helmet present"
          else
            echo "❌ Helmet missing"
            exit 1
          fi

          echo "🔍 Checking for express-rate-limit (DDoS)..."
          if grep -iq "rateLimit" "$FILE" && grep -iq "app.use(limiter" "$FILE"; then
            echo "✅ express-rate-limit present"
          else
            echo "❌ express-rate-limit missing"
            exit 1
          fi

          echo "🔍 Checking for xss-clean..."
          if grep -iq "xss-clean" "$FILE"; then
            echo "✅ xss-clean present"
          else
            echo "❌ xss-clean missing"
            exit 1
          fi

      - name: 🧹 Cleanup - Kill Backend Server
        run: pkill -f ts-node || true

      - name: 🎉 Done
        if: success()
        run: echo "✅ CI/CD completed successfully!"

